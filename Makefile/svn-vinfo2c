#!/bin/bash
#
# svn-vinfo2c by Glenn Horton-Smith, Kansas State University, January 2010
#

if [[ $1 == '-h' || $1 == '--help' ]]; then
  echo "Usage: svn-vinfo2c [directory [outfilename [varprefix]]]"
  echo ""
  echo "What it does: creates or updates a file defining C/C++ constants"
  echo "which fully characterize the branch and revision of the given"
  echo "svn-controlled directory.  The variables are named"
  echo "{prefix}SVN_VINFOSTRING, {prefix}SVN_VINFOMODIFIED, and "
  echo "{prefix}SVN_VINFOFUNKY."
  echo "If no prefix is given, 'k' is used."
  echo "If no filename is given, the file is named svninfo.h."
  echo "If no directory is given, the current directory is used."
  echo "If the file already exists and there is no need to change it, "
  echo "then the file is not modified."
fi

DIR=$1
FN=$2
VARPREFIX=$3

if [[ x$DIR == x ]]; then
  DIR=`pwd`
fi
if [[ x$FN == x ]]; then
  FN=svninfo.h
fi
if [[ x$VARPREFIX == x ]]; then
  VARPREFIX=k
fi
if [[ -e $FN ]]; then
  OUTFN=${FN}.$$.temp
else
  OUTFN=$FN
fi

version=`svnversion $DIR`
if [[ $version == exported ]]; then
  MODIFIED=1
  FUNKY=1
  STRING="$DIR (not in svn)"
else
  url=`svn info $DIR | grep '^URL:'`
  root=`svn info $DIR | grep '^Repository Root:'`
  root=${root/Repository Root: /}
  url=${url/URL: /}
  branch=${url/$root\//}
  STRING="$branch $version"
  if [[ $version =~ ^[0-9]+$ ]]; then
    MODIFIED=0
    FUNKY=0
  else
    FUNKY=1
    if [[ $version =~ M ]]; then
      MODIFIED=1
    else
      MODIFIED=0
    fi
  fi
fi

cat >$OUTFN <<EOF
  const char* ${VARPREFIX}SVN_VINFOSTRING   ="$STRING";
  const int   ${VARPREFIX}SVN_VINFOMODIFIED =$MODIFIED;
  const int   ${VARPREFIX}SVN_VINFOFUNKY    =$FUNKY;
EOF

if [[ $FN != $OUTFN ]]; then
  if ( cmp $FN $OUTFN > /dev/null ); then
    rm $OUTFN
  else
    mv -f $OUTFN $FN
  fi
fi


